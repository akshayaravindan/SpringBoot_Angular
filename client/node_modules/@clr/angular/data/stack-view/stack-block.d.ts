import { EventEmitter, OnInit } from '@angular/core';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import * as ɵngcc0 from '@angular/core';
export declare class ClrStackBlock implements OnInit {
    private parent;
    uniqueId: string;
    commonStrings: ClrCommonStringsService;
    expanded: boolean;
    expandedChange: EventEmitter<boolean>;
    expandable: boolean;
    focused: boolean;
    private _changedChildren;
    private _fullyInitialized;
    private _changed;
    get getChangedValue(): boolean;
    set setChangedValue(value: boolean);
    /**
     * Depth of the stack view starting from 1 for first level
     */
    ariaLevel: number;
    /**
     * Total number of rows in a given group
     */
    ariaSetsize: number;
    /**
     * The position of the row inside the grouped by level rows
     */
    ariaPosinset: number;
    constructor(parent: ClrStackBlock, uniqueId: string, commonStrings: ClrCommonStringsService);
    ngOnInit(): void;
    addChild(): void;
    toggleExpand(): void;
    get caretDirection(): string;
    get caretTitle(): string;
    get role(): string;
    get tabIndex(): string;
    get onStackLabelFocus(): boolean;
    get ariaExpanded(): string;
    getStackChildrenId(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrStackBlock, [{ optional: true; skipSelf: true; }, null, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrStackBlock, "clr-stack-block", never, { "expanded": "clrSbExpanded"; "expandable": "clrSbExpandable"; "setChangedValue": "clrSbNotifyChange"; "ariaLevel": "clrStackViewLevel"; "ariaSetsize": "clrStackViewSetsize"; "ariaPosinset": "clrStackViewPosinset"; }, { "expandedChange": "clrSbExpandedChange"; }, never, ["clr-stack-label", "*", "clr-stack-block"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhY2stYmxvY2suZC50cyIsInNvdXJjZXMiOlsic3RhY2stYmxvY2suZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2UgfSBmcm9tICcuLi8uLi91dGlscy9pMThuL2NvbW1vbi1zdHJpbmdzLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2xyU3RhY2tCbG9jayBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgcHJpdmF0ZSBwYXJlbnQ7XG4gICAgdW5pcXVlSWQ6IHN0cmluZztcbiAgICBjb21tb25TdHJpbmdzOiBDbHJDb21tb25TdHJpbmdzU2VydmljZTtcbiAgICBleHBhbmRlZDogYm9vbGVhbjtcbiAgICBleHBhbmRlZENoYW5nZTogRXZlbnRFbWl0dGVyPGJvb2xlYW4+O1xuICAgIGV4cGFuZGFibGU6IGJvb2xlYW47XG4gICAgZm9jdXNlZDogYm9vbGVhbjtcbiAgICBwcml2YXRlIF9jaGFuZ2VkQ2hpbGRyZW47XG4gICAgcHJpdmF0ZSBfZnVsbHlJbml0aWFsaXplZDtcbiAgICBwcml2YXRlIF9jaGFuZ2VkO1xuICAgIGdldCBnZXRDaGFuZ2VkVmFsdWUoKTogYm9vbGVhbjtcbiAgICBzZXQgc2V0Q2hhbmdlZFZhbHVlKHZhbHVlOiBib29sZWFuKTtcbiAgICAvKipcbiAgICAgKiBEZXB0aCBvZiB0aGUgc3RhY2sgdmlldyBzdGFydGluZyBmcm9tIDEgZm9yIGZpcnN0IGxldmVsXG4gICAgICovXG4gICAgYXJpYUxldmVsOiBudW1iZXI7XG4gICAgLyoqXG4gICAgICogVG90YWwgbnVtYmVyIG9mIHJvd3MgaW4gYSBnaXZlbiBncm91cFxuICAgICAqL1xuICAgIGFyaWFTZXRzaXplOiBudW1iZXI7XG4gICAgLyoqXG4gICAgICogVGhlIHBvc2l0aW9uIG9mIHRoZSByb3cgaW5zaWRlIHRoZSBncm91cGVkIGJ5IGxldmVsIHJvd3NcbiAgICAgKi9cbiAgICBhcmlhUG9zaW5zZXQ6IG51bWJlcjtcbiAgICBjb25zdHJ1Y3RvcihwYXJlbnQ6IENsclN0YWNrQmxvY2ssIHVuaXF1ZUlkOiBzdHJpbmcsIGNvbW1vblN0cmluZ3M6IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIGFkZENoaWxkKCk6IHZvaWQ7XG4gICAgdG9nZ2xlRXhwYW5kKCk6IHZvaWQ7XG4gICAgZ2V0IGNhcmV0RGlyZWN0aW9uKCk6IHN0cmluZztcbiAgICBnZXQgY2FyZXRUaXRsZSgpOiBzdHJpbmc7XG4gICAgZ2V0IHJvbGUoKTogc3RyaW5nO1xuICAgIGdldCB0YWJJbmRleCgpOiBzdHJpbmc7XG4gICAgZ2V0IG9uU3RhY2tMYWJlbEZvY3VzKCk6IGJvb2xlYW47XG4gICAgZ2V0IGFyaWFFeHBhbmRlZCgpOiBzdHJpbmc7XG4gICAgZ2V0U3RhY2tDaGlsZHJlbklkKCk6IHN0cmluZztcbn1cbiJdfQ==