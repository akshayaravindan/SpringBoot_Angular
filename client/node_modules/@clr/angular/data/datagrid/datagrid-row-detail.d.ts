import { AfterContentInit, OnDestroy, QueryList } from '@angular/core';
import { ClrDatagridCell } from './datagrid-cell';
import { ExpandableRowsCount } from './providers/global-expandable-rows';
import { RowActionService } from './providers/row-action-service';
import { Selection } from './providers/selection';
import { SelectionType } from './enums/selection-type';
import { DatagridIfExpandService } from './datagrid-if-expanded.service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
/**
 * Generic bland container serving various purposes for Datagrid.
 * For instance, it can help span a text over multiple rows in detail view.
 */
import * as ɵngcc0 from '@angular/core';
export declare class ClrDatagridRowDetail<T = any> implements AfterContentInit, OnDestroy {
    selection: Selection;
    rowActionService: RowActionService;
    expand: DatagridIfExpandService;
    expandableRows: ExpandableRowsCount;
    commonStrings: ClrCommonStringsService;
    SELECTION_TYPE: typeof SelectionType;
    constructor(selection: Selection, rowActionService: RowActionService, expand: DatagridIfExpandService, expandableRows: ExpandableRowsCount, commonStrings: ClrCommonStringsService);
    cells: QueryList<ClrDatagridCell>;
    set replace(value: boolean);
    private subscriptions;
    replacedRow: boolean;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    private _beginningOfExpandableContentAriaText;
    get beginningOfExpandableContentAriaText(): string;
    private _endOfExpandableContentAriaText;
    get endOfExpandableContentAriaText(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrDatagridRowDetail<any>, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrDatagridRowDetail<any>, "clr-dg-row-detail", never, { "replace": "clrDgReplace"; "_beginningOfExpandableContentAriaText": "clrRowDetailBeginningAriaText"; "_endOfExpandableContentAriaText": "clrRowDetailEndAriaText"; }, {}, ["cells"], ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtcm93LWRldGFpbC5kLnRzIiwic291cmNlcyI6WyJkYXRhZ3JpZC1yb3ctZGV0YWlsLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlckNvbnRlbnRJbml0LCBPbkRlc3Ryb3ksIFF1ZXJ5TGlzdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2xyRGF0YWdyaWRDZWxsIH0gZnJvbSAnLi9kYXRhZ3JpZC1jZWxsJztcbmltcG9ydCB7IEV4cGFuZGFibGVSb3dzQ291bnQgfSBmcm9tICcuL3Byb3ZpZGVycy9nbG9iYWwtZXhwYW5kYWJsZS1yb3dzJztcbmltcG9ydCB7IFJvd0FjdGlvblNlcnZpY2UgfSBmcm9tICcuL3Byb3ZpZGVycy9yb3ctYWN0aW9uLXNlcnZpY2UnO1xuaW1wb3J0IHsgU2VsZWN0aW9uIH0gZnJvbSAnLi9wcm92aWRlcnMvc2VsZWN0aW9uJztcbmltcG9ydCB7IFNlbGVjdGlvblR5cGUgfSBmcm9tICcuL2VudW1zL3NlbGVjdGlvbi10eXBlJztcbmltcG9ydCB7IERhdGFncmlkSWZFeHBhbmRTZXJ2aWNlIH0gZnJvbSAnLi9kYXRhZ3JpZC1pZi1leHBhbmRlZC5zZXJ2aWNlJztcbmltcG9ydCB7IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvaTE4bi9jb21tb24tc3RyaW5ncy5zZXJ2aWNlJztcbi8qKlxuICogR2VuZXJpYyBibGFuZCBjb250YWluZXIgc2VydmluZyB2YXJpb3VzIHB1cnBvc2VzIGZvciBEYXRhZ3JpZC5cbiAqIEZvciBpbnN0YW5jZSwgaXQgY2FuIGhlbHAgc3BhbiBhIHRleHQgb3ZlciBtdWx0aXBsZSByb3dzIGluIGRldGFpbCB2aWV3LlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDbHJEYXRhZ3JpZFJvd0RldGFpbDxUID0gYW55PiBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSB7XG4gICAgc2VsZWN0aW9uOiBTZWxlY3Rpb247XG4gICAgcm93QWN0aW9uU2VydmljZTogUm93QWN0aW9uU2VydmljZTtcbiAgICBleHBhbmQ6IERhdGFncmlkSWZFeHBhbmRTZXJ2aWNlO1xuICAgIGV4cGFuZGFibGVSb3dzOiBFeHBhbmRhYmxlUm93c0NvdW50O1xuICAgIGNvbW1vblN0cmluZ3M6IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlO1xuICAgIFNFTEVDVElPTl9UWVBFOiB0eXBlb2YgU2VsZWN0aW9uVHlwZTtcbiAgICBjb25zdHJ1Y3RvcihzZWxlY3Rpb246IFNlbGVjdGlvbiwgcm93QWN0aW9uU2VydmljZTogUm93QWN0aW9uU2VydmljZSwgZXhwYW5kOiBEYXRhZ3JpZElmRXhwYW5kU2VydmljZSwgZXhwYW5kYWJsZVJvd3M6IEV4cGFuZGFibGVSb3dzQ291bnQsIGNvbW1vblN0cmluZ3M6IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlKTtcbiAgICBjZWxsczogUXVlcnlMaXN0PENsckRhdGFncmlkQ2VsbD47XG4gICAgc2V0IHJlcGxhY2UodmFsdWU6IGJvb2xlYW4pO1xuICAgIHByaXZhdGUgc3Vic2NyaXB0aW9ucztcbiAgICByZXBsYWNlZFJvdzogYm9vbGVhbjtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHByaXZhdGUgX2JlZ2lubmluZ09mRXhwYW5kYWJsZUNvbnRlbnRBcmlhVGV4dDtcbiAgICBnZXQgYmVnaW5uaW5nT2ZFeHBhbmRhYmxlQ29udGVudEFyaWFUZXh0KCk6IHN0cmluZztcbiAgICBwcml2YXRlIF9lbmRPZkV4cGFuZGFibGVDb250ZW50QXJpYVRleHQ7XG4gICAgZ2V0IGVuZE9mRXhwYW5kYWJsZUNvbnRlbnRBcmlhVGV4dCgpOiBzdHJpbmc7XG59XG4iXX0=