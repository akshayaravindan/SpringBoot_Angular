import { AfterViewInit, ElementRef, Injector, OnDestroy, Renderer2 } from '@angular/core';
import { FocusTrapTracker } from './focus-trap-tracker.service';
import * as ɵngcc0 from '@angular/core';
interface FocusTrapConfig {
    strict: boolean;
}
export declare class FocusTrapDirective implements AfterViewInit, OnDestroy {
    private el;
    private injector;
    private focusTrapsTracker;
    private renderer;
    private platformId;
    private previousActiveElement;
    private previousTrappedActiveElement;
    private localFocusEscaped;
    private document;
    private parentElement;
    private topReboundEl;
    private bottomReboundEl;
    constructor(el: ElementRef, injector: Injector, focusTrapsTracker: FocusTrapTracker, renderer: Renderer2, platformId: Object);
    private _config;
    set config(config: FocusTrapConfig);
    onFocusIn(event: any): void;
    private createFocusableOffScreenEl;
    private addReboundEls;
    private removeReboundEls;
    setPreviousFocus(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FocusTrapDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FocusTrapDirective, "[clrFocusTrap]", never, { "config": "clrFocusTrap"; }, {}, never>;
}
export {};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jdXMtdHJhcC5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiZm9jdXMtdHJhcC5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBFbGVtZW50UmVmLCBJbmplY3RvciwgT25EZXN0cm95LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvY3VzVHJhcFRyYWNrZXIgfSBmcm9tICcuL2ZvY3VzLXRyYXAtdHJhY2tlci5zZXJ2aWNlJztcbmludGVyZmFjZSBGb2N1c1RyYXBDb25maWcge1xuICAgIHN0cmljdDogYm9vbGVhbjtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEZvY3VzVHJhcERpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBlbDtcbiAgICBwcml2YXRlIGluamVjdG9yO1xuICAgIHByaXZhdGUgZm9jdXNUcmFwc1RyYWNrZXI7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIHBsYXRmb3JtSWQ7XG4gICAgcHJpdmF0ZSBwcmV2aW91c0FjdGl2ZUVsZW1lbnQ7XG4gICAgcHJpdmF0ZSBwcmV2aW91c1RyYXBwZWRBY3RpdmVFbGVtZW50O1xuICAgIHByaXZhdGUgbG9jYWxGb2N1c0VzY2FwZWQ7XG4gICAgcHJpdmF0ZSBkb2N1bWVudDtcbiAgICBwcml2YXRlIHBhcmVudEVsZW1lbnQ7XG4gICAgcHJpdmF0ZSB0b3BSZWJvdW5kRWw7XG4gICAgcHJpdmF0ZSBib3R0b21SZWJvdW5kRWw7XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIGluamVjdG9yOiBJbmplY3RvciwgZm9jdXNUcmFwc1RyYWNrZXI6IEZvY3VzVHJhcFRyYWNrZXIsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIHBsYXRmb3JtSWQ6IE9iamVjdCk7XG4gICAgcHJpdmF0ZSBfY29uZmlnO1xuICAgIHNldCBjb25maWcoY29uZmlnOiBGb2N1c1RyYXBDb25maWcpO1xuICAgIG9uRm9jdXNJbihldmVudDogYW55KTogdm9pZDtcbiAgICBwcml2YXRlIGNyZWF0ZUZvY3VzYWJsZU9mZlNjcmVlbkVsO1xuICAgIHByaXZhdGUgYWRkUmVib3VuZEVscztcbiAgICBwcml2YXRlIHJlbW92ZVJlYm91bmRFbHM7XG4gICAgc2V0UHJldmlvdXNGb2N1cygpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG5leHBvcnQge307XG4iXX0=