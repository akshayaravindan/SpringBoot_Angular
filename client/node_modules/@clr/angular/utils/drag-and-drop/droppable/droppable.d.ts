import { ElementRef, EventEmitter, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { DomAdapter } from '../../dom-adapter/dom-adapter';
import { ClrDragEvent } from '../drag-event';
import { ClrDropToleranceInterface } from '../interfaces/drop-tolerance.interface';
import { DragAndDropEventBusService } from '../providers/drag-and-drop-event-bus.service';
import * as ɵngcc0 from '@angular/core';
export declare class ClrDroppable<T> implements OnInit, OnDestroy {
    private el;
    private eventBus;
    private domAdapter;
    private renderer;
    private dragStartSubscription;
    private dragMoveSubscription;
    private dragEndSubscription;
    private droppableEl;
    private clientRect;
    constructor(el: ElementRef, eventBus: DragAndDropEventBusService<T>, domAdapter: DomAdapter, renderer: Renderer2);
    isDraggableMatch: boolean;
    private _isDraggableOver;
    set isDraggableOver(value: boolean);
    private _group;
    set group(value: string | string[]);
    private _dropTolerance;
    private dropToleranceGenerator;
    set dropTolerance(value: number | string | ClrDropToleranceInterface);
    dragStartEmitter: EventEmitter<ClrDragEvent<T>>;
    dragMoveEmitter: EventEmitter<ClrDragEvent<T>>;
    dragEndEmitter: EventEmitter<ClrDragEvent<T>>;
    dragLeaveEmitter: EventEmitter<ClrDragEvent<T>>;
    dragEnterEmitter: EventEmitter<ClrDragEvent<T>>;
    dropEmitter: EventEmitter<ClrDragEvent<T>>;
    private unsubscribeFrom;
    private checkGroupMatch;
    private isInDropArea;
    private onDragStart;
    private onDragMove;
    private onDragEnd;
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrDroppable<any>, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ClrDroppable<any>, "[clrDroppable]", never, { "group": "clrGroup"; "dropTolerance": "clrDropTolerance"; }, { "dragStartEmitter": "clrDragStart"; "dragMoveEmitter": "clrDragMove"; "dragEndEmitter": "clrDragEnd"; "dragLeaveEmitter": "clrDragLeave"; "dragEnterEmitter": "clrDragEnter"; "dropEmitter": "clrDrop"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcHBhYmxlLmQudHMiLCJzb3VyY2VzIjpbImRyb3BwYWJsZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT25EZXN0cm95LCBPbkluaXQsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRG9tQWRhcHRlciB9IGZyb20gJy4uLy4uL2RvbS1hZGFwdGVyL2RvbS1hZGFwdGVyJztcbmltcG9ydCB7IENsckRyYWdFdmVudCB9IGZyb20gJy4uL2RyYWctZXZlbnQnO1xuaW1wb3J0IHsgQ2xyRHJvcFRvbGVyYW5jZUludGVyZmFjZSB9IGZyb20gJy4uL2ludGVyZmFjZXMvZHJvcC10b2xlcmFuY2UuaW50ZXJmYWNlJztcbmltcG9ydCB7IERyYWdBbmREcm9wRXZlbnRCdXNTZXJ2aWNlIH0gZnJvbSAnLi4vcHJvdmlkZXJzL2RyYWctYW5kLWRyb3AtZXZlbnQtYnVzLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2xyRHJvcHBhYmxlPFQ+IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgZWw7XG4gICAgcHJpdmF0ZSBldmVudEJ1cztcbiAgICBwcml2YXRlIGRvbUFkYXB0ZXI7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIGRyYWdTdGFydFN1YnNjcmlwdGlvbjtcbiAgICBwcml2YXRlIGRyYWdNb3ZlU3Vic2NyaXB0aW9uO1xuICAgIHByaXZhdGUgZHJhZ0VuZFN1YnNjcmlwdGlvbjtcbiAgICBwcml2YXRlIGRyb3BwYWJsZUVsO1xuICAgIHByaXZhdGUgY2xpZW50UmVjdDtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgZXZlbnRCdXM6IERyYWdBbmREcm9wRXZlbnRCdXNTZXJ2aWNlPFQ+LCBkb21BZGFwdGVyOiBEb21BZGFwdGVyLCByZW5kZXJlcjogUmVuZGVyZXIyKTtcbiAgICBpc0RyYWdnYWJsZU1hdGNoOiBib29sZWFuO1xuICAgIHByaXZhdGUgX2lzRHJhZ2dhYmxlT3ZlcjtcbiAgICBzZXQgaXNEcmFnZ2FibGVPdmVyKHZhbHVlOiBib29sZWFuKTtcbiAgICBwcml2YXRlIF9ncm91cDtcbiAgICBzZXQgZ3JvdXAodmFsdWU6IHN0cmluZyB8IHN0cmluZ1tdKTtcbiAgICBwcml2YXRlIF9kcm9wVG9sZXJhbmNlO1xuICAgIHByaXZhdGUgZHJvcFRvbGVyYW5jZUdlbmVyYXRvcjtcbiAgICBzZXQgZHJvcFRvbGVyYW5jZSh2YWx1ZTogbnVtYmVyIHwgc3RyaW5nIHwgQ2xyRHJvcFRvbGVyYW5jZUludGVyZmFjZSk7XG4gICAgZHJhZ1N0YXJ0RW1pdHRlcjogRXZlbnRFbWl0dGVyPENsckRyYWdFdmVudDxUPj47XG4gICAgZHJhZ01vdmVFbWl0dGVyOiBFdmVudEVtaXR0ZXI8Q2xyRHJhZ0V2ZW50PFQ+PjtcbiAgICBkcmFnRW5kRW1pdHRlcjogRXZlbnRFbWl0dGVyPENsckRyYWdFdmVudDxUPj47XG4gICAgZHJhZ0xlYXZlRW1pdHRlcjogRXZlbnRFbWl0dGVyPENsckRyYWdFdmVudDxUPj47XG4gICAgZHJhZ0VudGVyRW1pdHRlcjogRXZlbnRFbWl0dGVyPENsckRyYWdFdmVudDxUPj47XG4gICAgZHJvcEVtaXR0ZXI6IEV2ZW50RW1pdHRlcjxDbHJEcmFnRXZlbnQ8VD4+O1xuICAgIHByaXZhdGUgdW5zdWJzY3JpYmVGcm9tO1xuICAgIHByaXZhdGUgY2hlY2tHcm91cE1hdGNoO1xuICAgIHByaXZhdGUgaXNJbkRyb3BBcmVhO1xuICAgIHByaXZhdGUgb25EcmFnU3RhcnQ7XG4gICAgcHJpdmF0ZSBvbkRyYWdNb3ZlO1xuICAgIHByaXZhdGUgb25EcmFnRW5kO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbiJdfQ==