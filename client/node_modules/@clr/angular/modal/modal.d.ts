import { AnimationEvent } from '@angular/animations';
import { EventEmitter, OnChanges, OnDestroy, SimpleChange } from '@angular/core';
import { FocusTrapDirective } from '../utils/focus-trap/focus-trap.directive';
import { ClrCommonStringsService } from '../utils/i18n/common-strings.service';
import { ScrollingService } from '../utils/scrolling/scrolling-service';
import * as ɵngcc0 from '@angular/core';
export declare class ClrModal implements OnChanges, OnDestroy {
    private _scrollingService;
    commonStrings: ClrCommonStringsService;
    modalId: string;
    focusTrap: FocusTrapDirective;
    _open: boolean;
    _openChanged: EventEmitter<boolean>;
    closable: boolean;
    size: string;
    staticBackdrop: boolean;
    skipAnimation: string;
    bypassScrollService: boolean;
    stopClose: boolean;
    altClose: EventEmitter<boolean>;
    constructor(_scrollingService: ScrollingService, commonStrings: ClrCommonStringsService, modalId: string);
    ngOnChanges(changes: {
        [propName: string]: SimpleChange;
    }): void;
    ngOnDestroy(): void;
    open(): void;
    close(): void;
    fadeDone(e: AnimationEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrModal, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrModal, "clr-modal", never, { "_open": "clrModalOpen"; "closable": "clrModalClosable"; "staticBackdrop": "clrModalStaticBackdrop"; "skipAnimation": "clrModalSkipAnimation"; "bypassScrollService": "clrModalOverrideScrollService"; "stopClose": "clrModalPreventClose"; "size": "clrModalSize"; }, { "_openChanged": "clrModalOpenChange"; "altClose": "clrModalAlternateClose"; }, never, [".modal-nav", ".modal-title", ".modal-body", ".modal-footer"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwuZC50cyIsInNvdXJjZXMiOlsibW9kYWwuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFuaW1hdGlvbkV2ZW50IH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBTaW1wbGVDaGFuZ2UgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvY3VzVHJhcERpcmVjdGl2ZSB9IGZyb20gJy4uL3V0aWxzL2ZvY3VzLXRyYXAvZm9jdXMtdHJhcC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2UgfSBmcm9tICcuLi91dGlscy9pMThuL2NvbW1vbi1zdHJpbmdzLnNlcnZpY2UnO1xuaW1wb3J0IHsgU2Nyb2xsaW5nU2VydmljZSB9IGZyb20gJy4uL3V0aWxzL3Njcm9sbGluZy9zY3JvbGxpbmctc2VydmljZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDbHJNb2RhbCBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIF9zY3JvbGxpbmdTZXJ2aWNlO1xuICAgIGNvbW1vblN0cmluZ3M6IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlO1xuICAgIG1vZGFsSWQ6IHN0cmluZztcbiAgICBmb2N1c1RyYXA6IEZvY3VzVHJhcERpcmVjdGl2ZTtcbiAgICBfb3BlbjogYm9vbGVhbjtcbiAgICBfb3BlbkNoYW5nZWQ6IEV2ZW50RW1pdHRlcjxib29sZWFuPjtcbiAgICBjbG9zYWJsZTogYm9vbGVhbjtcbiAgICBzaXplOiBzdHJpbmc7XG4gICAgc3RhdGljQmFja2Ryb3A6IGJvb2xlYW47XG4gICAgc2tpcEFuaW1hdGlvbjogc3RyaW5nO1xuICAgIGJ5cGFzc1Njcm9sbFNlcnZpY2U6IGJvb2xlYW47XG4gICAgc3RvcENsb3NlOiBib29sZWFuO1xuICAgIGFsdENsb3NlOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj47XG4gICAgY29uc3RydWN0b3IoX3Njcm9sbGluZ1NlcnZpY2U6IFNjcm9sbGluZ1NlcnZpY2UsIGNvbW1vblN0cmluZ3M6IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlLCBtb2RhbElkOiBzdHJpbmcpO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IHtcbiAgICAgICAgW3Byb3BOYW1lOiBzdHJpbmddOiBTaW1wbGVDaGFuZ2U7XG4gICAgfSk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBvcGVuKCk6IHZvaWQ7XG4gICAgY2xvc2UoKTogdm9pZDtcbiAgICBmYWRlRG9uZShlOiBBbmltYXRpb25FdmVudCk6IHZvaWQ7XG59XG4iXX0=